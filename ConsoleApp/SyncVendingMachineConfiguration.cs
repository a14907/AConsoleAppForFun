// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ConsoleApp
{

    // SyncVendingMachine
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class SyncVendingMachineConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SyncVendingMachine>
    {
        public SyncVendingMachineConfiguration()
            : this("dbo")
        {
        }

        public SyncVendingMachineConfiguration(string schema)
        {
            ToTable("SyncVendingMachine", schema);
            HasKey(x => x.UniqueId);

            Property(x => x.UniqueId).HasColumnName(@"UniqueID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("bigint").IsRequired();
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Logo).HasColumnName(@"Logo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.MerchantUniqueId).HasColumnName(@"MerchantUniqueID").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.BusinessCategoryId).HasColumnName(@"BusinessCategoryID").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.ActivationCode).HasColumnName(@"ActivationCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsOptional();
            Property(x => x.IsActivate).HasColumnName(@"IsActivate").HasColumnType("bit").IsOptional();
            Property(x => x.Currency).HasColumnName(@"Currency").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("int").IsOptional();
            Property(x => x.Province).HasColumnName(@"Province").HasColumnType("int").IsOptional();
            Property(x => x.City).HasColumnName(@"City").HasColumnType("int").IsOptional();
            Property(x => x.District).HasColumnName(@"District").HasColumnType("int").IsOptional();
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(225);
            Property(x => x.MaintainerUniqueId).HasColumnName(@"MaintainerUniqueID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.MaintainerIp).HasColumnName(@"MaintainerIP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SetupTime).HasColumnName(@"SetupTime").HasColumnType("datetime").IsOptional();
            Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.PrivateKey).HasColumnName(@"PrivateKey").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PublicKey).HasColumnName(@"PublicKey").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("float").IsOptional();
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("float").IsOptional();
            Property(x => x.IsRecommend).HasColumnName(@"IsRecommend").HasColumnType("bit").IsOptional();
            Property(x => x.RecommendPosition).HasColumnName(@"RecommendPosition").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ReferralsUniqueId).HasColumnName(@"ReferralsUniqueID").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.ErrorCode).HasColumnName(@"ErrorCode").HasColumnType("int").IsOptional();
            Property(x => x.Version).HasColumnName(@"Version").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.CreateTime).HasColumnName(@"CreateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateTime).HasColumnName(@"UpdateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.TempBusinessCategoryId).HasColumnName(@"TempBusinessCategoryID").HasColumnType("int").IsOptional();
            Property(x => x.TempReferralsUserCode).HasColumnName(@"TempReferralsUserCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.TempMerchantId).HasColumnName(@"TempMerchantID").HasColumnType("int").IsOptional();
            Property(x => x.TempMaintainerId).HasColumnName(@"TempMaintainerID").HasColumnType("int").IsOptional();
            Property(x => x.DeviceId).HasColumnName(@"DeviceID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MerchantCode).HasColumnName(@"MerchantCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.ProvinceName).HasColumnName(@"ProvinceName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.CityName).HasColumnName(@"CityName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.DistrictName).HasColumnName(@"DistrictName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.StoreUniqueId).HasColumnName(@"StoreUniqueID").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
        }
    }

}
// </auto-generated>
