// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ConsoleApp
{

    // SyncGXSMachine
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class SyncGxsMachine
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid UniqueId { get; set; } // UniqueID (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public string Logo { get; set; } // Logo (length: 128)
        public string ContactMobile { get; set; } // ContactMobile (length: 32)
        public string MerchantUniqueId { get; set; } // MerchantUniqueID (length: 50)
        public string BusinessCategoryId { get; set; } // BusinessCategoryID (length: 50)
        public string ActivationCode { get; set; } // ActivationCode (length: 50)
        public string Name { get; set; } // Name (length: 128)
        public string Password { get; set; } // Password (length: 128)
        public int? Status { get; set; } // Status
        public bool? IsActivated { get; set; } // IsActivated
        public string Currency { get; set; } // Currency (length: 20)
        public int? Country { get; set; } // Country
        public int? Province { get; set; } // Province
        public int? City { get; set; } // City
        public int? District { get; set; } // District
        public string Address { get; set; } // Address (length: 225)
        public System.Guid? OperatorUniqueId { get; set; } // OperatorUniqueID
        public string OperatorIp { get; set; } // OperatorIP (length: 50)
        public string MerchantCode { get; set; } // MerchantCode (length: 50)
        public System.DateTime? SetupTime { get; set; } // SetupTime
        public string Remark { get; set; } // Remark (length: 200)
        public string PrivateKey { get; set; } // PrivateKey
        public string PublicKey { get; set; } // PublicKey
        public string DeviceId { get; set; } // DeviceID (length: 50)

        ///<summary>
        /// 经度
        ///</summary>
        public decimal? Longitude { get; set; } // Longitude

        ///<summary>
        /// 纬度
        ///</summary>
        public decimal? Latitude { get; set; } // Latitude
        public bool? IsRecommend { get; set; } // IsRecommend
        public string ErrorCode { get; set; } // ErrorCode (length: 50)
        public string Version { get; set; } // Version (length: 12)
        public System.DateTime? LastConnectTime { get; set; } // LastConnectTime
        public int? ConnectStatus { get; set; } // ConnectStatus
        public System.DateTime? CreateTime { get; set; } // CreateTime
        public System.DateTime? UpdateTime { get; set; } // UpdateTime
        public int? TempBusinessCategoryId { get; set; } // TempBusinessCategoryID
        public int? TempMemberId { get; set; } // TempMemberId
        public int? TempPartnerId { get; set; } // TempPartnerId
        public int? TempUserId { get; set; } // TempUserId
        public string TempUserCode { get; set; } // TempUserCode (length: 50)
        public string StoreUniqueId { get; set; } // StoreUniqueID (length: 50)
        public string CountryName { get; set; } // CountryName (length: 50)
        public string ProvinceName { get; set; } // ProvinceName (length: 50)
        public string CityName { get; set; } // CityName (length: 50)
        public string DistrictName { get; set; } // DistrictName (length: 50)

        public SyncGxsMachine()
        {
            UniqueId = System.Guid.NewGuid();
            CreateTime = System.DateTime.Now;
            UpdateTime = System.DateTime.Now;
        }
    }

}
// </auto-generated>
