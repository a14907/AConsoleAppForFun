// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ConsoleApp
{

    // OperationCenteApplication
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class OperationCenteApplicationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OperationCenteApplication>
    {
        public OperationCenteApplicationConfiguration()
            : this("dbo")
        {
        }

        public OperationCenteApplicationConfiguration(string schema)
        {
            ToTable("OperationCenteApplication", schema);
            HasKey(x => x.UniqueId);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UniqueId).HasColumnName(@"UniqueID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OperationCenteName).HasColumnName(@"OperationCenteName").HasColumnType("nvarchar").IsOptional().HasMaxLength(128);
            Property(x => x.OwnerUniqueId).HasColumnName(@"OwnerUniqueID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.OwnerCode).HasColumnName(@"OwnerCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("int").IsOptional();
            Property(x => x.Province).HasColumnName(@"Province").HasColumnType("int").IsOptional();
            Property(x => x.City).HasColumnName(@"City").HasColumnType("int").IsOptional();
            Property(x => x.District).HasColumnName(@"District").HasColumnType("int").IsOptional();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsOptional();
            Property(x => x.OperationCenteUniqueId).HasColumnName(@"OperationCenteUniqueID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.ApproveInfo).HasColumnName(@"ApproveInfo").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ContactPersonName).HasColumnName(@"ContactPersonName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.ContactMobile).HasColumnName(@"ContactMobile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContactEmail).HasColumnName(@"ContactEmail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EnterpriseName).HasColumnName(@"EnterpriseName").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.EnterpriseLegalPersonName).HasColumnName(@"EnterpriseLegalPersonName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.EnterpriseAddress).HasColumnName(@"EnterpriseAddress").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.BusinessLicense).HasColumnName(@"BusinessLicense").HasColumnType("nvarchar").IsOptional().HasMaxLength(1000);
            Property(x => x.Partners).HasColumnName(@"partners").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CreateTime).HasColumnName(@"CreateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateTime).HasColumnName(@"UpdateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.PromiseServiceCodeNumber).HasColumnName(@"PromiseServiceCodeNumber").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
