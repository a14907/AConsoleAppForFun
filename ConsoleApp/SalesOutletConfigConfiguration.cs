// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ConsoleApp
{

    // SalesOutletConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class SalesOutletConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SalesOutletConfig>
    {
        public SalesOutletConfigConfiguration()
            : this("dbo")
        {
        }

        public SalesOutletConfigConfiguration(string schema)
        {
            ToTable("SalesOutletConfig", schema);
            HasKey(x => x.UniqueId);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UniqueId).HasColumnName(@"UniqueID").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SalesOutletCode).HasColumnName(@"SalesOutletCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.SalesOutletUniqueId).HasColumnName(@"SalesOutletUniqueID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.SupportQuickPay).HasColumnName(@"SupportQuickPay").HasColumnType("bit").IsOptional();
            Property(x => x.DiscountType).HasColumnName(@"DiscountType").HasColumnType("int").IsOptional();
            Property(x => x.DiscountAmount).HasColumnName(@"DiscountAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.MinSalesOrderAmountOfDiscount).HasColumnName(@"MinSalesOrderAmountOfDiscount").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.MaxDiscountAmount).HasColumnName(@"MaxDiscountAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.DiscountRatio).HasColumnName(@"DiscountRatio").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.PushMobile).HasColumnName(@"PushMobile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CreateTime).HasColumnName(@"CreateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateTime).HasColumnName(@"UpdateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.ServiceFee).HasColumnName(@"ServiceFee").HasColumnType("int").IsOptional();
            Property(x => x.RecommendServiceFee).HasColumnName(@"RecommendServiceFee").HasColumnType("int").IsOptional();
            Property(x => x.SortOrder).HasColumnName(@"SortOrder").HasColumnType("int").IsOptional();
            Property(x => x.SalesOutletType).HasColumnName(@"SalesOutletType").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
